import React from "react";
import GithubUpdateInfo from "../../../components/features/GithubUpdateInfo";
import DetailsSummary from "../../../components/DetailsSummary";

const AEExprBase: React.FC = () => {
  return (
    <div className="faq-content">
      <GithubUpdateInfo filePath="src/pages/sections/aeexprfaq/Base.tsx" />
      <DetailsSummary title="Какие есть отличия и сходства в JavaScript, используемый в браузере от того, что используется в After Effects?">
        <p>{/* FIXME:  */}</p>
      </DetailsSummary>
      <DetailsSummary title="Что такое переменные и константы? Какие типы данных они могут принимать?">
        <p></p>
        <ul>
          <li>
            У <mark>переменной</mark> значение может меняться когда угодно - с помощью
            контроллера, функции или условий.
          </li>
          <li>
            У <mark>константы</mark> значение никогда не должно изменяться. Её нельзя
            перезаписать или изменить во время работы выражения. Это может быть
            какое-нибудь значение из физики или математики, например{" "}
          </li>
        </ul>
        <p>
          В переменные и константы вы можете задать различные типы данных: число, булево
          (True или False), строку и массив.
        </p>
        <p>
          Чтобы задать переменную - достаточно придумать ей название, поставить знак равно
          и указать его значение. Будет лучше, если вы для переменной укажете тип данных,
          например <mark>var</mark> или <mark>let</mark>.
        </p>
        <code>
          speed = 100
          <br />
          var angle = 45
          <br />
          let height = 30
        </code>
        <p>
          Чтобы задать константу, или же неизменяемую переменную - нужно перед названием
          переменной задать тип данных <mark>const</mark>. Это позволит языку выражений
          понять, что данное значение перезаписывать не следует и будет выводить ошибку
          при попытке его перезаписи.
        </p>
        <code>
          const pi = 3.14
          <br />
          const g = 9.81
          <br />
        </code>
        {/* TODO: написать!! */}
      </DetailsSummary>
      <DetailsSummary title="Как правильно называть переменные?">
        <p>{/* FIXME: написать */}</p>
      </DetailsSummary>
      <DetailsSummary title="Какие типы данных я могу задать для переменных?">
        <p>{/* FIXME: написать */}</p>
      </DetailsSummary>
      <DetailsSummary title="Какие есть стандартные функции в выражениях? Есть ли пример их использования?">
        <p>{/* FIXME: написать!! */}</p>
      </DetailsSummary>
      <DetailsSummary title="Как создать собственную функцию и использовать его?">
        <p>{/* FIXME: */}</p>
      </DetailsSummary>
      <DetailsSummary title="Что такое конструкция условий? Для чего нужен if, else?">
        <p>{/* FIXME: написать */}</p>
      </DetailsSummary>
      <DetailsSummary title="Какие математические выражения я могу использовать?">
        <p>
          С помощью языка выражений вы можете выполнять стандартные арифметические
          выражения, например сложение и вычитание, умножение и деление.
        </p>
        <p>
          Для начала зададим две простые переменные, внутри которых будут храниться число.
        </p>
        <code>
          x = 100 <br />
          y = 50 <br />
        </code>
        <p>
          После того, как мы задали переменные - мы можем с ними взаимодействовать и даже
          записывать результат математических операций в новые переменные.
        </p>
        <code>
          <pre>
            x + y <br />
            x - y<br />x * y z = x / y
          </pre>
        </code>
        <p>
          Помимо стандартных математических операций, которые мы знаем со школьных времён,
          существуют и математические функции, как <mark>Math.round</mark> или{" "}
          <mark>Math.floor</mark>.
        </p>
        {/* TODO: написать!! */}
      </DetailsSummary>
      <DetailsSummary title="Что такое комментарии и для чего они нужны?">
        <p>
          Комментарии - это не обязательная вещь при написании выражений. Но комментарии
          могут пригодиться при объяснении того или иного поведения в вашей инструкции
          другому пользователю или даже себе из будущего.
        </p>
        {/* TODO: написать */}
      </DetailsSummary>
      <DetailsSummary title="Как отформатировать текст или число?">
        <p>{/* FIXME: написать!! */}</p>
      </DetailsSummary>
      <DetailsSummary title="Зачем нужен seedRandom?">
        <p>{/* FIXME: написать!! */}</p>
      </DetailsSummary>
    </div>
  );
};
export default AEExprBase;
